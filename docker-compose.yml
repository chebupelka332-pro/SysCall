# docker-compose.yml

version: '3.8'

services:
  # Сервис для вашего Python-приложения
  app:
    # Собирать образ из Dockerfile в текущей директории (.)
    build: .
    container_name: python_app
    # Перезапускать контейнер, если он упадет
    restart: unless-stopped
    # Зависит от сервиса mosquitto. Docker Compose запустит mosquitto перед app.
    depends_on:
      - mosquitto
    # Подключаем сервис к общей сети
    networks:
      - app-network

  # Сервис для MQTT-брокера Mosquitto
  mosquitto:
    # Используем готовый официальный образ
    image: eclipse-mosquitto:latest
    container_name: mosquitto_broker
    restart: unless-stopped
    # Пробрасываем порты наружу, чтобы можно было подключиться к брокеру с хост-машины
    ports:
      - "1883:1883" # Стандартный порт MQTT
      - "9001:9001" # Порт для WebSockets
    # Монтируем ваши файлы конфигурации и папки для данных/логов внутрь контейнера
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    # Подключаем сервис к общей сети
    networks:
      - app-network

# Определяем общую сеть для взаимодействия контейнеров
networks:
  app-network:
    driver: bridge